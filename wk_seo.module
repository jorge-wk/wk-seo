<?php

function wk_seo_menu() {
  $items = array();

  $items['admin/config/search/wk-seo/config'] = array( //this creates a URL that will call this form at "examples/form-example"
    'title' => 'WK SEO config', //page title
    'description' => 'Settings for global meta tags and socials.',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('wk_seo_admin_settings', 'google_tag_settings_form'), //put the name of the form here
    'access arguments' => array('administer wk_seo settings'),
    'file' => 'wk_seo.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

// function wk_seo_admin($form, &$form_state) {
//   $form = array();
//
//   $form['onthisdate_maxdisp'] = array(
//     '#type' => 'textfield',
//     '#title' => t('Maximum number of links'),
//     '#default_value' => variable_get('onthisdate_maxdisp', 3),
//     '#size' => 2,
//     '#maxlength' => 2,
//     '#description' => t("The maximum number of links to display in the block."),
//     '#required' => TRUE,
//   );
//
//   return system_settings_form($form);
// }

function form_example_form_validate($form, &$form_state) {
}

function form_example_form_submit($form, &$form_state) {
}

/**
 * Start overriding Yoast seo
 */

function wk_seo_module_implements_alter(&$implementations, $hook){
  if ($hook == 'form_alter') {
    // Move wk_seo_rdf_mapping() to the end of the list. module_implements()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['wk_seo'];
    unset($implementations['wk_seo']);
    $implementations['wk_seo'] = $group;
  }
}


function wk_seo_form_alter(&$form, $form_state, $form_id){

  if (isset($form['yoast_seo']) && isset($form['metatags'])) {
    global $base_url;
    drupal_add_css(drupal_get_path('module', 'wk_seo') . '/css/wk_seo.css');
    drupal_add_js(drupal_get_path('module', 'wk_seo') . '/js/wk_seo.js');

    if (!empty($form['#entity_type'])) {
      if (!empty($form['#entity'])) {
        $langcode = entity_language($form['#entity_type'], (object) $form['#entity']);
      }
    }

    if (empty($langcode)) {
      $langcode = LANGUAGE_NONE;
    }

    // Get the metatag config to see defaults and values // NOT IN USE NOW
    // $metatag_config = metatag_config_load_with_defaults($options['instance']);

    // Check if new entity
    $new_entity = empty($form['#entity']->nid) ? TRUE : FALSE;

    // Add wk_seo class for js
    $form['yoast_seo'][$langcode]['#attributes'] = array(
      'class' => array('yoast-seo-wk-seo-wrap')
    );
    // $form['yoast_seo']['#attributes']['class'] = array_unshift($form['yoast_seo']['#attributes']['class'],array('yoast-seo-wk-seo'));

    // Edit the yoast_seo form just enough to give use a menu and some css and js selectors
    $form['yoast_seo']['#prefix'] = '<div class="wk-seo-wrap">
    <ul class="wk-seo-tabs">
    <li><a href="#wk-seo-seo" class="wk-seo-tab-link active" id="wk-seo-seo">SEO</a></li>
    <li><a href="#wk-seo-social" class="wk-seo-tab-link" id="wk-seo-social">Facebook</a></li>
    </ul>
    ';
    $form['yoast_seo']['#suffix'] = '</div>';

    // Give us a container for our form to make it more user friendly,
    // cannot be in langcode because it breaks our markup
    $form['yoast_seo']['wk_seo_social'] = array(
      '#type' => 'container',
      '#title' => t('WK SEO Social'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
      '#multilingual' => TRUE,
      '#tree' => TRUE,
      '#weight' => 35,
      '#language' => $langcode,
      '#attributes' => array(
        'class' => array('wk-seo-social-form'),
      ),
    );

    // Get all default vaules and saved values from metatag module
    $metatag_values = $form['metatags'][$langcode]['open-graph'];

    // Check metatag default value
    $default_value = !empty($metatag_values['og:title']['default']['#value']) ? $metatag_values['og:title']['default']['#value'] : '';
    // Check metatag value
    $value = !empty($metatag_values['og:title']['value']['#default_value']) ? $metatag_values['og:title']['value']['#default_value'] : '';
    // Generate form fields
    $form['yoast_seo']['wk_seo_social'][$langcode]['og:title'] = array(
        '#title' => t('og:title'),
        '#description' => t('Fill in the value for og:title'),
        '#type' => 'textfield',
        '#default_value' => !empty($value) ? $value: $default_value,
        '#id' => drupal_html_id('og:title'),
        '#attributes' => array(
          'class' => array('wk-seo-social-og-title'),
        ),
    );


    // Check metatag default value
    $default_value = !empty($metatag_values['og:description']['default']['#value']) ? $metatag_values['og:description']['default']['#value'] : '';
    // Check metatag value
    $value = !empty($metatag_values['og:description']['value']['#default_value']) ? $form['metatags'][$langcode]['open-graph']['og:description']['value']['#default_value'] : '';
    // Generate form fields
    $form['yoast_seo']['wk_seo_social'][$langcode]['og:description'] = array(
        '#title' => t('og:description'),
        '#type' => 'textarea',
        '#description' => t('Fill in the value for og:description'),
        '#default_value' => !empty($value) ? $value: $default_value,
        '#id' => drupal_html_id('og:description'),
        '#attributes' => array(
          'class' => array('wk-seo-social-og-description'),
        ),
    );

    // Check metatag default value
    $default_value = !empty($metatag_values['og:url']['default']['#value']) ? $metatag_values['og:url']['default']['#value'] : '';
    // Check metatag value
    $value = !empty($metatag_values['og:url']['value']['#default_value']) ? $metatag_values['og:url']['value']['#default_value'] : '';
    // Generate form fields
    $form['yoast_seo']['wk_seo_social'][$langcode]['og:url'] = array(
        '#title' => t('og:url'),
        '#description' => t('Fill in the value for og:url'),
        '#type' => 'textfield',
        '#default_value' => !empty($value) ? $value: $default_value,
        '#id' => drupal_html_id('og:url'),
        '#attributes' => array(
          'class' => array('wk-seo-social-og-url'),
        ),
    );

    $metatag_values = $form['metatags'][$langcode]['open-graph'];
    // Check metatag default value
    $default_value = !empty($metatag_values['og:image']['default']['#value']) ? $metatag_values['og:image']['default']['#value'] : '';
    // Check metatag value
    $value = !empty($metatag_values['og:image']['value']['#default_value']) ? $metatag_values['og:image']['value']['#default_value'] : '';
    $image_url = !empty($value) ? $value: $default_value;
    $image_fid = wk_seo_getFidFromUrl($image_url);
    // Generate form fields
    $form['yoast_seo']['wk_seo_social'][$langcode]['og:image'] = array(
        '#title' => t('Image'),
        '#type' => 'managed_file',
        '#description' => t('Upload a custom image for this entity'),
        '#default_value' => $image_fid,
        '#upload_location' => 'public://',
        '#attributes' => array(
          'class' => array('wk-seo-social-og-image'),
        ),
    );
    // Image url $base_url.'/sites/www.sparbankerna.se/files/wunderkraut_logo.png'
    // $image_url = !empty($value) ? $value: $default_value;
    $image_url = !empty($image_url) ? $image_url: file_get_contents(__DIR__ . '/images/bbg.encoded');
    // Give us some markup for the preview area
    $form['yoast_seo']['wk_seo_social'][$langcode]['wk_seo_social_preview'] = array(
      '#markup' => '<div class="wk-seo-social-preview"><div class="wk-seo-social-preview-image-wrap" style="background-image:url('.$image_url.');"></div><div class="wk-seo-social-preview-text-wrap"><div class="wk-seo-social-preview-title"></div><div class="wk-seo-social-preview-description"></div><div class="wk-seo-social-preview-site-url"></div></div></div>'
    );
    // Link to image in module is not wokring because of htaccess to
    // <img src="'.$base_url.'/'.drupal_get_path('module', 'wk_seo').'/wk_seo/images/wunderkraut_logo.png" class="wk-seo-social-preview-image" />

    $form += array('#submit' => array());
    array_unshift($form['#submit'], 'wk_seo_configuration_form_submit');

  }
}

function wk_seo_getFidFromUrl($filename){
  // Check if file is an URL
  // in case scheme relative URI is passed, e.g., //www.google.com/
  $filename = trim($filename, '/');
  // If scheme not included, prepend it
  if (!preg_match('#^http(s)?://#', $filename)) {
      $filename = 'http://' . $filename;
  }
  $urlParts = parse_url($filename);

  // remove www
  $domain = preg_replace('/^www\./', '', $urlParts['path']);
  // Get basename
  $filename = basename($domain);
  // Create the URI
  $filename = 'public://'.$filename;

  // Get image based on URI
  $result = db_select('file_managed', 'fm')
        ->fields('fm', array('fid'))
        ->condition('uri', $filename, '=')
        ->execute()
        ->fetchAssoc();
  $fid = $result['fid'];
  return $fid;
}

function wk_seo_configuration_form_submit($form, &$form_state) {
  dpm('saving');
  if (!empty($form_state['values']['yoast_seo']['wk_seo_social'])) {
    dpm($form_state['values']['yoast_seo']['wk_seo_social']);
    $langcode = $form_state['values']['language'];
    $wk_seo_social = $form_state['values']['yoast_seo']['wk_seo_social'][$langcode];
    $metatags_values = $form_state['values']['metatags'][$langcode];

    // If wk_seo_social is set we move the value, otherwise it's handled by metatag module
    if (isset($wk_seo_social['og:title'])) {
      $form_state['values']['metatags'][$langcode]['og:title']['value'] = $wk_seo_social['og:title'];
    }

    // If wk_seo_social is set we move the value, otherwise it's handled by metatag module
    if (isset($wk_seo_social['og:description'])) {
      $form_state['values']['metatags'][$langcode]['og:description']['value'] = $wk_seo_social['og:description'];
    }

    // If wk_seo_social is set we move the value, otherwise it's handled by metatag module
    if (isset($wk_seo_social['og:url'])) {
      $form_state['values']['metatags'][$langcode]['og:url']['value'] = $wk_seo_social['og:url'];
    }

    // If wk_seo_social is set we move the value, otherwise it's handled by metatag module
    if (isset($wk_seo_social['og:image'])) {
      $fid = $wk_seo_social['og:image'];
      if (!empty($fid)) {
        $file = file_load($fid);
        $url = file_create_url($file->uri);
        $form_state['values']['metatags'][$langcode]['og:image']['value'] = $url;
      }
      else {
        $form_state['values']['metatags'][$langcode]['og:image']['value'] = '';
      }
    }
  }

}

// function wk_seo_form_alter(){}

/**
 * Implements hook_tokens().
 */
function wk_seo_token_info_alter(&$data) {
    $data ['tokens']['site']['og_image'] = array(
        'name' => t('OG image'),
        'description' => t('OG image'),
    );
}
function wk_seo_tokens_alter(array &$replacements, array $context) {
  if ($context['type'] == 'site') {
    if (isset($context['tokens']['og_image'])){
      $fid = variable_get('wk_seo_og_image', '');
      $file = file_load($fid);
      $uri = $file->uri;
      $replacements[$context['tokens']['og_image']] = $uri;
    }
  }
    return $replacements;
}
